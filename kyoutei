##出走データ抽出
##出走データ＋オッズデータバインド
library(rvest)
library(pforeach)

npforeach(i=1:12, .c=rbind)({
  cat(i,"\n")
  url<- sprintf("http://www.boatrace.jp/owpc/pc/race/racelist?rno=%d&jcd=08&hd=20180210",i) ##%dを忘れないように
  Sys.sleep(3)
  html <- read_html(url)
  r3<-html_table(html, fill=TRUE)
  r3<-data.frame(r3)
  r3<- r3[c(-2,-4,-5,-6,-8,-9,-10,-12,-13,-14,-16,-17,-18,-20,-21,-22, -24,-25,-26), ]
  r3<- r3[,15:38]
  r3<- r3[,c(-2,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24)]
})-> result
  result<- result[c(-1,-8,-15,-22,-29,-36,-43,-50,-57,-64,-71,-78),]


##データ成型
library(stringr)
library(dplyr)
test<- cbind(
  race_id=race_id,
  course= result$枠,
  number=substr(result$ボートレーサー.1,1,4),
  rank=substr(result$ボートレーサー.1,38,39),
  age= substr(result$ボートレーサー.1, 
              str_locate(result$ボートレーサー.1,"歳")-2,
              str_locate(result$ボートレーサー.1,"歳")-1),
  ave_st=substr(result$ボートレーサー.2,57,60),
  national_win=substr(result$全国,1,4),
  national_2ren=substr(result$全国,31,35),
  national_3ren=substr(result$全国,62,66),
  local_win=substr(result$当地,1,4),
  local_ren=substr(result$当地,31,35),
  local_3ren=substr(result$当地,62,66),
  motor_num=substr(result$モーター,1,2),
  motor_2ren=substr(result$モーター,28,33),
  motor_3ren=substr(result$モーター,59,64),
  boat_num=substr(result$ボート,1,2),
  boat_2ren=substr(result$ボート,28,33),
  boat_3ren=substr(result$ボート,59,64)
)
test<- data.frame(test)
test$race_id<- as.integer(as.character(test$race_id))
test$course<- as.character(test$course)
test$number<- as.integer(as.character(test$number))
test$rank<- as.character(test$rank)
test$age<- as.integer(as.character(test$age))
test$ave_st<- as.numeric(as.character(test$ave_st))
test$national_win<-as.numeric(as.character(test$national_win))
test$national_2ren<- as.numeric(as.character(test$national_2ren))
test$national_3ren<- as.numeric(as.character(test$national_3ren))
test$local_win<-as.numeric(as.character(test$local_win))
test$local_ren<-as.numeric(as.character(test$local_ren))
test$local_3ren<-as.numeric(as.character(test$local_3ren))
test$motor_num<-as.integer(as.character(test$motor_num))
test$motor_2ren<-as.numeric(as.character(test$motor_2ren))
test$motor_3ren<-as.numeric(as.character(test$motor_3ren))
test$boat_num<- as.integer(as.character(test$boat_num))
test$boat_2ren<- as.numeric(as.character(test$boat_2ren))
test$boat_3ren<- as.numeric(as.character(test$boat_3ren))
##データ付加
test<- left_join(test, player, by="number")
test[is.na(test)] <- 0
course_win<- test[,32]*course[,1]+test[,33]*course[,2]+test[,34]*course[,3]+test[,35]*course[,4]+test[,36]*course[,5]+test[,37]*course[,6]
Course_1<- test[,40]*course[,1]+test[,42]*course[,2]+test[,44]*course[,3]+test[,46]*course[,4]+test[,48]*course[,5]+test[,50]*course[,6]
Course_2<- test[,41]*course[,1]+test[,43]*course[,2]+test[,45]*course[,3]+test[,47]*course[,4]+test[,49]*course[,5]+test[,51]*course[,6]
test5<- cbind(test, course_win,Course_1, Course_2)


##正規化
racewiseFeature <-c("ave_st",
                    "national_win",
                    "national_2ren",
                    "national_3ren",
                    "local_win",
                    "local_ren",
                    "local_3ren",
                    "motor_2ren",
                    "motor_3ren",
                    "boat_2ren",
                    "boat_3ren",
                    "win_rate",
                    "X2win_rate",
                    "X1st_number",
                    "X2nd_number",
                    "win_number",
                    "win2_number",
                    "startaverage",
                    "course1",
                    "course_win",
                    "Course_1",
                    "Course_2")

splited.allData <- split(test5,test5$race_id)

scaled.test <-  do.call("rbind",
   lapply(splited.allData,
     function(rw) {
       data.frame(
         race_id= rw$race_id,
         course=rw$course,
         number=rw$number,
         rank=rw$rank,
         age.x=rw$age.x,
         motor_num=rw$motor_num,
         boat_num=rw$boat_num,
         sex=rw$sex,
         height=rw$height,
         weight=rw$weight,
         round=rw$round,
         scale(rw[,racewiseFeature])#ここで正規化している
         ) 
     })
  )
 
 scaled.test<- scaled.test[,c(-1)]
 scaled.test$number<- as.integer(scaled.test$number)
 scaled.test$course<- as.integer(scaled.test$course)
 scaled.test$motor_num<- as.integer(scaled.test$motor_num) 
 scaled.test$boat_num<- as.integer(scaled.test$boat_num)
 scaled.test$rank<- as.integer(scaled.test$rank)
 
 is.nan.df <- function(x) do.call(cbind, lapply(x, is.nan))
 scaled.test[is.nan.df(scaled.test)] <- 0
 scaled.test[is.na(scaled.test)] <- 0
 scaled.test5<- mutate(scaled.test, result=0)
 
##odds付加
 library(randomForest)
 odds_pred<- predict(odds_rf, newdata=scaled.test)
 odds_pred<- data.frame(odds_pred)
 scaled.test<- cbind(scaled.test,odds_pred[,1])
 names(scaled.test)[33]<- "odd"
 scaled.test5<- mutate(scaled.test, result=0)
##xgboostを使用した予測
library(xgboost)
library(Matrix)

#test data読み込みmatrix化
scaled.test5$result<- as.integer(scaled.test5$result)
test_label<- scaled.test5$result
test<- scaled.test[,-34]
test<- as.matrix(test)
dtest<- xgboost::xgb.DMatrix(test, label= test_label)

##予測結果出力
test_pred<- predict(xgb2, newdata = dtest)
test_pred <- ifelse (test_pred > 0.5,1,0)
test_pred2<- predict(bst2, newdata = dtest)
test_pred2<- test_pred2*100
test_pred2<-  matrix(test_pred2,2,length(test_pred2)/2)
test_pred2 <- t(test_pred2) %>% as.data.frame()
cbind(test_bind$course,scaled.test5$odd,test_pred,test_pred2) %>%  View()
